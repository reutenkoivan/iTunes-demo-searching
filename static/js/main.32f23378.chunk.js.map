{"version":3,"sources":["redux/reducer/favorites.js","redux/reducer/songs.js","redux/reducer/playerInfo.js","redux/reducer/index.js","themes.js","components/CardList/CardItem.js","redux/actions/index.js","redux/actionCreators/addToLocalStorage.js","redux/containers/CardItem.js","components/CardList/index.js","components/SearchingPage/index.js","redux/containers/SearchingPage.js","components/Favorites/index.js","redux/containers/Favorites.js","components/Player/index.js","redux/containers/Player.js","components/Menu/SwipeableTemporaryDrawer.js","redux/containers/SwipeableTemporaryDrawer.js","components/Menu/index.js","redux/actionCreators/createSongObject.js","redux/actionCreators/fetchSongs.js","redux/containers/Menu.js","components/Controller.js","redux/containers/Controller.js","index.js"],"names":["favorites","state","arguments","length","undefined","action","type","data","every","song","trackId","concat","Object","toConsumableArray","filter","songs","some","id","map","isFavorite","error","initialState","trackLink","isPlaying","artistName","trackName","playlist","index","playerInfo","newObj","assign","previewUrl","findIndex","listItem","next","previous","reducer","combineReducers","themes","main","createMuiTheme","palette","primary","contrastText","secondary","background","paper","default","text","disabled","hint","icon","divider","active","hover","hoverOpacity","selected","disabledBackground","typography","useNextVariants","CardItem","favoriteButtonColor","switchSoundState","_this","props","favorite","searching","addSongToPlayer","switchFavoriteState","switchFavoritesState","setState","_this2","this","_this$props","classes","react_default","a","createElement","Grid_default","item","xs","Card_default","className","card","details","CardContent_default","content","Typography_default","component","variant","title","color","controls","IconButton_default","onClick","aria-label","PauseCircleFilled_default","PlayArrow_default","Favorite_default","Link_default","href","artistViewUrl","target","price","trackPrice","CardMedia_default","collectionName","cover","image","artworkUrl","Component","withStyles","theme","display","flexDirection","width","flex","alignItems","paddingLeft","spacing","unit","paddingBottom","paddingRight","addSongSuccess","addToLocalStorage","dispatch","prevIdes","localStorage","getItem","setItem","split","trim","currentIdes","join","connect","CardList","containers_CardItem","key","isfavorite","SearchingPage","components_CardList","omponent","gutterBottom","align","Favorites","Player","typeOfPage","history","location","pathname","reverse","_this$props$track","track","favoritesSongs","searchingSongs","playNext","_this$props$playerInf","playPrevious","_this$props$playerInf2","_this$props2","AppBar_default","appBar","Toolbar_default","toolbar","songInfo","name","noWrap","SkipPrevious_default","Pause_default","SkipNext_default","top","bottom","defineProperty","breakpoints","up","position","margin","SwipeableTemporaryDrawer","toggleDrawer","open","clearStorage","forEach","removeItem","SwipeableDrawer_default","isOpen","onClose","onOpen","role","onKeyDown","list","List_default","RouterLink","to","ListItem_default","button","Search_default","ListItemText_default","Divider_default","DeleteForever_default","React","Menu","searchingValue","e","linkParams","value","getSongs","Fragment","root","menuButton","Menu_default","grow","search","searchIcon","lib","element","InputBase","minLength","debounceTimeout","onChange","placeholder","inputRoot","input","inputInput","containers_SwipeableTemporaryDrawer","flexGrow","marginLeft","marginRight","borderRadius","shape","backgroundColor","fade","common","white","&:hover","height","pointerEvents","justifyContent","paddingTop","transition","transitions","create","&:focus","createSongObject","url","artworkUrl100","slice","settings","method","headers","Headers","fetchSongs","str","fetch","then","response","json","fetchSongsSuccess","results","catch","err","Controller","playSong","audio","play","pause","ids","prevProps","_this3","Audio","onended","onloadeddata","src","react_router_dom","react_router","path","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","core_styles","containers_Controller","document","getElementById"],"mappings":"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","file":"static/js/main.32f23378.chunk.js","sourcesContent":["const favorites = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_FAVORITE_SUCCESS\": {\r\n      if(typeof action.data != \"undefined\" && state.every(song => song.trackId - action.data.trackId))\r\n        return [...state, action.data];\r\n\r\n      return state.filter(song => song.trackId !== action.data.trackId)\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default favorites;\r\n","const songs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_SONGS_SUCCESS\": {\r\n      return [...action.data]\r\n    }\r\n    case \"SWITCH_FAVORITES_STATE\": {\r\n      if(state.some(song => song.trackId === action.id))\r\n      return [...state.map(song =>{\r\n        if(song.trackId === action.id){\r\n          song.isFavorite = !song.isFavorite;\r\n          return song\r\n        }\r\n\r\n        return song\r\n      })];\r\n\r\n      return state\r\n    }\r\n    case \"FETCH_SONGS_ERROR\":{\r\n      return [action.error];\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default songs;","const initialState = {\r\n  trackLink: \"\",\r\n  isPlaying: false,\r\n  trackId: 0,\r\n  artistName: \"\",\r\n  trackName: \"\",\r\n  playlist: [],\r\n  index: 0\r\n};\r\n\r\nconst playerInfo = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_SONG_SUCCESS\": {\r\n      const newObj = Object.assign({}, state);\r\n\r\n      newObj.trackLink = action.song.previewUrl;\r\n      newObj.trackId = action.song.trackId;\r\n      newObj.isPlaying = action.song.previewUrl === state.trackLink ? !state.isPlaying : true;\r\n      newObj.artistName = action.song.artistName;\r\n      newObj.trackName = action.song.trackName;\r\n      newObj.playlist = action.playlist;\r\n      newObj.index = action.playlist.findIndex(listItem => listItem.trackId === action.song.trackId);\r\n      newObj.next = newObj.index === action.playlist.length-1 ? 0 : newObj.index + 1;\r\n      newObj.previous = newObj.index === 0 ? action.playlist.length-1 : newObj.index - 1;\r\n\r\n      return newObj\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default playerInfo;\r\n","import { combineReducers } from \"redux\";\r\nimport favorites from \"./favorites\"\r\nimport songs from \"./songs\"\r\nimport playerInfo from \"./playerInfo\"\r\n\r\nconst reducer = combineReducers({playerInfo, songs, favorites});\r\nexport default reducer","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const themes = {\r\n  main: createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#3F5866\",\r\n        contrastText: \"#F2F2F2\"\r\n      },\r\n      secondary: {\r\n        main: \"#BDD3DE\",\r\n        contrastText: \"#F2F2F2\"\r\n      },\r\n      error: {\r\n        main: \"#FF9000\",\r\n        contrastText: \"#F0F0DF\"\r\n      },\r\n      background: {\r\n        paper: \"#f2f2f2\",\r\n        default: \"#fff\"\r\n      },\r\n      text: {\r\n        primary: \"rgba(0, 0, 0, 0.87)\",\r\n        secondary: \"rgba(0, 0, 0, 0.54)\",\r\n        disabled: \"rgba(0, 0, 0, 0.38)\",\r\n        hint: \"rgba(0, 0, 0, 0.38)\",\r\n        icon: \"rgba(0, 0, 0, 0.12)\"\r\n      },\r\n      divider: \"rgba(0, 0, 0, 0.12)\",\r\n      action: {\r\n        active: \"rgba(0, 0, 0, 0.54)\",\r\n        hover: \"rgba(0, 0, 0, 0.08)\",\r\n        hoverOpacity: 0.1,\r\n        selected: \"rgba(0, 0, 0, 0.14)\",\r\n        disabled: \"rgba(0, 0, 0, 0.26)\",\r\n        disabledBackground: \"rgba(0, 0, 0, 0.12)\"\r\n      }\r\n    },\r\n    typography: {\r\n      useNextVariants: true\r\n    }\r\n  })\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Pause from \"@material-ui/icons/PauseCircleFilled\"\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n\r\n  card: {\r\n    display: 'flex'\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: \"100%\"\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 150,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n  },\r\n  price: {\r\n    paddingLeft: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit\r\n  }\r\n});\r\n\r\nclass CardItem extends Component {\r\n\r\n  state = {\r\n    favoriteButtonColor: \"primary\"\r\n  };\r\n\r\n  switchSoundState = () => {\r\n    const isFavorite = this.props.favorite;\r\n    const playlist = isFavorite ? this.props.favorites : this.props.searching;\r\n    this.props.addSongToPlayer(this.props.song, playlist);\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state){\r\n\r\n    if(props.favorites.some(song => song.trackId === props.song.trackId))\r\n      return {favoriteButtonColor: \"error\"};\r\n\r\n    if(!props.favorites.length && state.favoriteButtonColor === \"error\")\r\n      return {favoriteButtonColor: \"primary\"};\r\n\r\n    return null\r\n  }\r\n\r\n  switchFavoriteState = () => {\r\n    this.props.switchFavoritesState(this.props.song);\r\n    this.setState(\r\n      (this.state.favoriteButtonColor === \"primary\")\r\n        ? {favoriteButtonColor: \"error\"}\r\n        : {favoriteButtonColor: \"primary\"}\r\n    )\r\n  };\r\n\r\n  render() {\r\n    const { classes, song, playerInfo } = this.props;\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Card className={classes.card}>\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Typography component=\"h5\" variant=\"h5\" title={`name of track is ${song.trackName}`}>\r\n                {song.trackName}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" title={`artist name is ${song.artistName}`}>\r\n                {song.artistName}\r\n              </Typography>\r\n            </CardContent>\r\n            <div className={classes.controls}>\r\n              <IconButton\r\n                title={playerInfo.isPlaying && playerInfo.trackLink === song.previewUrl\r\n                  ? \"Pause\"\r\n                  : \"Play\"}\r\n                onClick={this.switchSoundState}\r\n                aria-label={  playerInfo.isPlaying && playerInfo.trackLink === song.previewUrl\r\n                  ? \"Pause\"\r\n                  : \"Play\"\r\n                }\r\n              >\r\n                {playerInfo.isPlaying && playerInfo.trackLink === song.previewUrl\r\n                  ? <Pause color=\"primary\"/>\r\n                  : <PlayArrowIcon color=\"primary\"/>\r\n                }\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={this.switchFavoriteState}\r\n                aria-label=\"Add-to-favorite\"\r\n                title={this.props.favorites.some(song => song.trackId === this.props.song.trackId)\r\n                  ? \"Favorite\"\r\n                  : \"Not favorite\"\r\n                }>\r\n                <FavoriteIcon color={this.state.favoriteButtonColor} />\r\n              </IconButton>\r\n\r\n              {this.state.favoriteButtonColor === \"error\"\r\n                ? <Link href={song.artistViewUrl} target=\"_blank\">\r\n                  <Typography className={classes.price} variant=\"subtitle1\" color=\"textSecondary\" title=\"Look on iTunes\">\r\n                    Look on iTunes\r\n                  </Typography>\r\n                </Link>\r\n                : <Typography className={classes.price} variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {song.trackPrice}$\r\n                </Typography>\r\n              }\r\n            </div>\r\n          </div>\r\n          <CardMedia\r\n            title={song.collectionName}\r\n            className={classes.cover}\r\n            image={song.artworkUrl}\r\n          />\r\n        </Card>\r\n        <br/>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nCardItem.propTypes = {\r\n  classes: PropTypes.object,\r\n  favorite: PropTypes.bool,\r\n  favorites: PropTypes.array,\r\n  searching: PropTypes.array,\r\n  song: PropTypes.object,\r\n  playerInfo: PropTypes.object,\r\n  addSongToPlayer: PropTypes.func,\r\n  switchFavoritesState: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(CardItem);\r\n","export const fetchSongsSuccess = data => ({\r\n  data,\r\n  type: \"FETCH_SONGS_SUCCESS\"\r\n});\r\n\r\nexport const fetchSongsError = error => ({\r\n  error,\r\n  type: \"FETCH_SONGS_ERROR\"\r\n});\r\n\r\nexport const switchFavoritesState = id => ({\r\n  id,\r\n  type: \"SWITCH_FAVORITES_STATE\"\r\n});\r\n\r\nexport const addSongSuccess = (song, playlist) => ({\r\n  song,\r\n  playlist,\r\n  type: \"ADD_SONG_SUCCESS\"\r\n});\r\n\r\nexport const favorites = data => ({\r\n  data,\r\n  type: \"ADD_TO_FAVORITE_SUCCESS\"\r\n});\r\n\r\nexport const addToFavoriteError = error => ({\r\n  error,\r\n  type: \"FETCH_SONGS_ERROR\"\r\n});\r\n","import { favorites, switchFavoritesState } from \"../actions\";\r\n\r\nconst addToLocalStorage = (song) => dispatch => {\r\n  const prevIdes = localStorage.getItem(\"iTunesApp\");\r\n\r\n  if(typeof prevIdes !== \"string\") {\r\n    localStorage.setItem(\"iTunesApp\", song.trackId);\r\n\r\n    dispatch(switchFavoritesState(song.trackId));\r\n    dispatch(favorites(song));\r\n  } else if(prevIdes.split(\" \").every(id => id - song.trackId)){\r\n    localStorage.setItem(\"iTunesApp\", (prevIdes + \" \" + song.trackId).trim());\r\n\r\n    dispatch(switchFavoritesState(song.trackId));\r\n    dispatch(favorites(song));\r\n  } else {\r\n    const currentIdes = prevIdes.split(\" \").filter(id => id - song.trackId);\r\n    localStorage.setItem(\"iTunesApp\", currentIdes.join(\" \").trim());\r\n\r\n    dispatch(switchFavoritesState(song.trackId));\r\n    dispatch(favorites(song));\r\n  }\r\n};\r\n\r\nexport default addToLocalStorage","import { connect } from \"react-redux\";\r\nimport CardItem from \"../../components/CardList/CardItem\";\r\nimport addToLocalStorage from \"../actionCreators/addToLocalStorage\";\r\nimport { addSongSuccess } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  favorites: state.favorites,\r\n  playerInfo: state.playerInfo,\r\n  searching: state.songs,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  switchFavoritesState: (song) => dispatch(addToLocalStorage(song)),\r\n  addSongToPlayer: (song, playlist) => dispatch(addSongSuccess(song, playlist))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CardItem);\r\n","import React from \"react\";\r\nimport CardItem from \"../../redux/containers/CardItem\" ;\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CardList = props => {\r\n    return props.songs.map(song =>\r\n        <CardItem key={song.trackId} favorite={props.isfavorite} song={song}/>\r\n      )\r\n  };\r\n\r\nCardList.propTypes = {\r\n  isfavorite: PropTypes.bool,\r\n  songs: PropTypes.array\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport CardList from \"../CardList/index\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst SearchingPage = props => (\r\n  props.songs.length\r\n    ? <Grid item xs={12}>\r\n      <CardList favorite={false} songs = {props.songs}/>\r\n    </Grid>\r\n    : <Typography omponent=\"h2\" variant=\"h4\" color=\"secondary\" gutterBottom align=\"center\">\r\n      For searching write in input field\r\n    </Typography>\r\n);\r\n\r\nSearchingPage.propTypes = {\r\n  songs: PropTypes.array\r\n};\r\n\r\nexport default SearchingPage;\r\n","import { connect } from \"react-redux\";\r\nimport SearchingPage from \"../../components/SearchingPage\";\r\n\r\nconst mapStateToProps = state => ({\r\n  songs: state.songs\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchingPage);","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardList from \"../CardList\"\r\nimport PropTypes from 'prop-types';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Favorites = props => {\r\n  return (\r\n    props.favorites.length\r\n      ? <Grid item xs={12}>\r\n        <CardList isfavorite songs={props.favorites}/>\r\n      </Grid>\r\n      : <Typography omponent=\"h2\" variant=\"h4\" color=\"secondary\" gutterBottom align=\"center\">\r\n        You don't have favorites yet\r\n      </Typography>\r\n  )};\r\n\r\nFavorites.propTypes = {\r\n  favorites: PropTypes.array,\r\n  favorite: PropTypes.bool\r\n};\r\n\r\nexport default Favorites;\r\n","import { connect } from \"react-redux\";\r\nimport Favorites from \"../../components/Favorites\";\r\n\r\nconst mapStateToProps = state => ({\r\n    songs: state.songs.filter(song => song.isFavorite),\r\n    favorites: state.favorites\r\n  });\r\n\r\nexport default connect(mapStateToProps)(Favorites);\r\n","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Pause from \"@material-ui/icons/Pause\"\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    }\r\n  },\r\n  songInfo:{\r\n    position: \"absolute\"\r\n  },\r\n  toolbar:{\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '0 auto',\r\n  }\r\n});\r\n\r\nclass Player extends Component {\r\n\r\n  switchSoundState = () => {\r\n    const typeOfPage = this.props.history.location.pathname.split(/\\//g).reverse()[0];\r\n    const {favorites, songs} = this.props.track;\r\n    const {favoritesSongs, searchingSongs, playerInfo} = this.props;\r\n\r\n    if(playerInfo.artistName) {\r\n\r\n      favorites.length\r\n        ? this.props.addSongToPlayer(favorites[0], favoritesSongs)\r\n        : this.props.addSongToPlayer(songs[0], searchingSongs);\r\n\r\n    } else if(typeOfPage === \"favorites\" && favoritesSongs[0]){\r\n      this.props.addSongToPlayer(favoritesSongs[0], favoritesSongs)\r\n    } else if(!typeOfPage && searchingSongs[0])\r\n      this.props.addSongToPlayer(searchingSongs[0], searchingSongs)\r\n  };\r\n\r\n  playNext = () => {\r\n    let { playlist, next, artistName } = this.props.playerInfo;\r\n    if(artistName && playlist.length !== 1)\r\n      this.props.addSongToPlayer(playlist[next], playlist)\r\n  };\r\n\r\n  playPrevious = () => {\r\n    let { playlist, previous, artistName } = this.props.playerInfo;\r\n    if(artistName && playlist.length !== 1)\r\n      this.props.addSongToPlayer(playlist[previous], playlist)\r\n  };\r\n\r\n  render(){\r\n    const { classes, playerInfo} = this.props;\r\n    return (\r\n      <AppBar color=\"primary\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <div className={classes.songInfo}>\r\n            <Typography name=\"trackName\" className={classes.title} variant=\"h5\" color=\"inherit\" noWrap>\r\n              {playerInfo.trackName}\r\n            </Typography>\r\n            <Typography name=\"artistName\" className={classes.title} variant=\"h6\" color=\"secondary\" noWrap>\r\n              {playerInfo.artistName}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.controls}>\r\n            <IconButton onClick={this.playPrevious} color=\"secondary\" aria-label=\"Previous\">\r\n              <SkipPreviousIcon />\r\n            </IconButton>\r\n            { playerInfo.isPlaying\r\n              ? <IconButton\r\n                onClick={this.switchSoundState}\r\n                aria-label=\"Pause\"\r\n              >\r\n                <Pause color=\"secondary\"/>\r\n              </IconButton>\r\n\r\n              : <IconButton\r\n                onClick={this.switchSoundState}\r\n                aria-label=\"Play\">\r\n                <PlayArrowIcon color=\"secondary\"/>\r\n              </IconButton>\r\n            }\r\n            <IconButton onClick={this.playNext} color=\"secondary\" aria-label=\"Next\">\r\n              <SkipNextIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Player);\r\n","import { connect } from \"react-redux\";\r\nimport Player from \"../../components/Player\";\r\nimport { addSongSuccess } from \"../actions\";\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  track: {\r\n    songs: state.songs.filter(song => song.trackId === state.playerInfo.trackId),\r\n    favorites: state.favorites.filter(song => song.trackId === state.playerInfo.trackId)\r\n  },\r\n  playerInfo: state.playerInfo,\r\n  searchingSongs: state.songs,\r\n  favoritesSongs: state.favorites\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addSongToPlayer: (song, playlist) => dispatch(addSongSuccess(song, playlist))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Player);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Favorite from \"@material-ui/icons/Favorite\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteForever from \"@material-ui/icons/DeleteForever\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  }\r\n};\r\n\r\nclass SwipeableTemporaryDrawer extends React.Component {\r\n\r\n  toggleDrawer = open => this.props.toggleDrawer(open);\r\n  clearStorage = () => {\r\n    this.props.favorites.forEach(song => this.props.switchFavoritesState(song));\r\n    localStorage.removeItem(\"iTunesApp\");\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <SwipeableDrawer\r\n          open={this.props.isOpen}\r\n          onClose={this.toggleDrawer(false)}\r\n          onOpen={this.toggleDrawer(true)}\r\n        >\r\n          <div\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer(false)}\r\n            onKeyDown={this.toggleDrawer(false)}\r\n          >\r\n            <div className={classes.list}>\r\n              <List>\r\n                <Link component={RouterLink} to={\"/\"}>\r\n                  <ListItem button >\r\n                    <SearchIcon/>\r\n                    <ListItemText primary={\"Search\"} />\r\n                  </ListItem>\r\n                </Link>\r\n                <Link component={RouterLink} to={\"/favorites\"}>\r\n                  <ListItem button >\r\n                    <Favorite />\r\n                    <ListItemText primary={\"Favorites\"} />\r\n                  </ListItem>\r\n                </Link>\r\n                <Divider />\r\n                <Link\r\n                  component={RouterLink}\r\n                  onClick={this.clearStorage}\r\n                  to=\"/\"\r\n                >\r\n                  <ListItem button >\r\n                    <DeleteForever />\r\n                    <ListItemText primary={\"Clear favorites\"} />\r\n                  </ListItem>\r\n                </Link>\r\n              </List>\r\n            </div>\r\n          </div>\r\n        </SwipeableDrawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwipeableTemporaryDrawer.propTypes = {\r\n  classes: PropTypes.object,\r\n  toggleDrawer: PropTypes.func,\r\n  favorites: PropTypes.array,\r\n  switchFavoritesState: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(SwipeableTemporaryDrawer);\r\n","import { connect } from \"react-redux\";\r\nimport SwipeableTemporaryDrawer from \"../../components/Menu/SwipeableTemporaryDrawer\"\r\nimport addToLocalStorage from \"../actionCreators/addToLocalStorage\";\r\n\r\nconst mapStateToProps = state => ({\r\n  favorites: state.favorites\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  switchFavoritesState: (song) => dispatch(addToLocalStorage(song))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SwipeableTemporaryDrawer);\r\n","import React, { Component } from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SwipeableTemporaryDrawer from \"../../redux/containers/SwipeableTemporaryDrawer\"\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 250,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nclass Menu extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  searchingValue = e => {\r\n    const linkParams = e.target.value.trim().split(/\\s+/).join(\"+\");\r\n    if(linkParams)\r\n      this.props.getSongs(linkParams)\r\n  };\r\n\r\n  toggleDrawer = open => () => {\r\n    this.setState({\r\n      isOpen: open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const typeOfPage = this.props.history.location.pathname === \"/\";\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <IconButton onClick={this.toggleDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n                {typeOfPage ? \"Searching page\" : \"Favorite songs\"}\r\n              </Typography>\r\n              <div className={classes.grow} />\r\n              {typeOfPage\r\n                ? <div className={classes.search}>\r\n                  <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                  </div>\r\n                  <DebounceInput\r\n                    element={InputBase}\r\n                    minLength={2}\r\n                    debounceTimeout={700}\r\n                    onChange={this.searchingValue}\r\n                    placeholder=\"Song...\"\r\n                    classes={{\r\n                      root: classes.inputRoot,\r\n                      input: classes.inputInput,\r\n                    }}\r\n                  />\r\n                </div>\r\n                : \"\"\r\n              }\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n        <SwipeableTemporaryDrawer isOpen={this.state.isOpen} toggleDrawer={this.toggleDrawer}/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.propTypes = {\r\n  getSongs: PropTypes.func,\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","const getImg300PX = url => url.slice(0,-13) + \"300x300bb.jpg\";\r\n\r\nconst createSongObject = (data, isFavorite) => {\r\n    return data.map(song =>\r\n      ({\r\n          artistName: song.artistName,\r\n          trackName: song.trackName,\r\n          previewUrl: song.previewUrl,\r\n          artworkUrl: getImg300PX(song.artworkUrl100),\r\n          trackPrice: song.trackPrice,\r\n          trackId: song.trackId,\r\n          collectionName: song.collectionName,\r\n          artistViewUrl: song.artistViewUrl,\r\n          isFavorite\r\n      })\r\n    );\r\n};\r\n\r\n export default createSongObject\r\n","import createSongObject from \"./createSongObject\"\r\nimport {\r\n  fetchSongsSuccess,\r\n  fetchSongsError,\r\n  favorites,\r\n  addToFavoriteError\r\n} from \"../actions\";\r\n\r\nconst myHeaders = new Headers();\r\n\r\nconst settings = {\r\n  method: 'GET',\r\n  headers: myHeaders,\r\n};\r\n\r\nconst fetchSongs = (str, id) => dispatch => (typeof id === \"undefined\")\r\n\r\n    ? fetch(`https://itunes.apple.com/search?term=${str}&media=music&limit=10`, settings)\r\n    .then(response=> response.json())\r\n    .then(data => dispatch(fetchSongsSuccess(createSongObject(data.results, false))))\r\n    .catch(err => dispatch(fetchSongsError(err)))\r\n\r\n    : fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`)\r\n      .then(response => response.json())\r\n      .then(data => dispatch(favorites(createSongObject(data.results, true)[0])))\r\n      .catch(err => dispatch(addToFavoriteError(err)));\r\n\r\nexport default fetchSongs\r\n","import { connect } from \"react-redux\";\r\nimport Menu from \"../../components/Menu\";\r\nimport fetchSongs from \"../actionCreators/fetchSongs\";\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSongs: (str) => dispatch(fetchSongs(str))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Menu);\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport SearchingPage from \"../redux/containers/SearchingPage\";\r\nimport Favorites from \"../redux/containers/Favorites\";\r\nimport Player from \"../redux/containers/Player\";\r\nimport Menu from \"../redux/containers/Menu\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Controller extends Component {\r\n  componentDidMount(){\r\n    const ids = localStorage.getItem(\"iTunesApp\");\r\n    if(typeof ids === \"string\" && ids)\r\n      ids.split(\" \").forEach(id => this.props.getSongs(null, id));\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let {trackLink, isPlaying, playlist, next} = this.props.playerInfo;\r\n\r\n    if(trackLink !== prevProps.playerInfo.trackLink) {\r\n      this.audio = new Audio(trackLink);\r\n      this.audio.onended = () => {this.props.addSongToPlayer(playlist[next], playlist)};\r\n      this.audio.onloadeddata = () => this.audio.play()\r\n    } else if(this.audio !== undefined){\r\n      isPlaying ? this.playSong() : this.pause();\r\n    }\r\n  };\r\n\r\n  getSnapshotBeforeUpdate(prevProps) {\r\n    let {trackLink} = this.props.playerInfo;\r\n    if(prevProps.playerInfo.trackLink && trackLink !== prevProps.playerInfo.trackLink)\r\n      this.audio.src = \"\";\r\n\r\n    return null\r\n  };\r\n\r\n  playSong = () => this.audio.play();\r\n  pause = () => this.audio.pause();\r\n\r\n  render(){\r\n    return (\r\n      <Router>\r\n        <Route path={\"/\"} component={Menu} /><br/>\r\n        <Route exact path={\"/\"} component={SearchingPage} />\r\n        <Route exact path={\"/favorites\"} component={Favorites} /><br/><br/><br/>\r\n        <Route path={\"/\"} component={Player} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nController.propTypes = {\r\n  addSongToPlayer: PropTypes.func,\r\n  playerInfo: PropTypes.object,\r\n  getSongs: PropTypes.func,\r\n  audio: PropTypes.object\r\n};\r\n\r\nexport default Controller\r\n","import { connect } from \"react-redux\";\r\nimport Controller from \"../../components/Controller\";\r\nimport fetchSongs from \"../actionCreators/fetchSongs\";\r\nimport { addSongSuccess } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  playerInfo: state.playerInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSongs: (str, id) => dispatch(fetchSongs(str, id)),\r\n  addSongToPlayer: (song, playlist) => dispatch(addSongSuccess(song, playlist))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Controller);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./redux/reducer\";\r\nimport { themes } from \"./themes\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport \"./index.css\"\r\n\r\nimport Controller from \"./redux/containers/Controller\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={themes.main}>\r\n    <Controller />\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}