{"version":3,"sources":["redux/reducer/favorites.js","redux/reducer/songs.js","redux/reducer/playerInfo.js","redux/reducer/rootPath.js","redux/reducer/index.js","themes.js","components/CardList/CardItem.js","redux/actions/index.js","redux/actionCreators/addToLocalStorage.js","redux/containers/CardItem.js","components/CardList/index.js","components/SearchingPage/index.js","redux/containers/SearchingPage.js","components/Favorites/index.js","redux/containers/Favorites.js","components/Player/index.js","redux/containers/Player.js","components/Menu/SwipeableTemporaryDrawer.js","redux/containers/SwipeableTemporaryDrawer.js","components/Menu/index.js","redux/actionCreators/createSongObject.js","redux/actionCreators/fetchSongs.js","redux/containers/Menu.js","components/Controller.js","redux/containers/Controller.js","index.js"],"names":["favorites","state","arguments","length","undefined","action","type","data","every","song","trackId","concat","Object","toConsumableArray","filter","songs","some","id","map","isFavorite","error","initialState","trackLink","isPlaying","artistName","trackName","playlist","index","playerInfo","newObj","assign","previewUrl","findIndex","listItem","next","previous","rootPath","path","reducer","combineReducers","themes","main","createMuiTheme","palette","primary","contrastText","secondary","background","paper","default","text","disabled","hint","icon","divider","active","hover","hoverOpacity","selected","disabledBackground","typography","useNextVariants","CardItem","favoriteButtonColor","switchSoundState","_this","props","favorite","searching","addSongToPlayer","switchFavoriteState","switchFavoritesState","setState","_this2","this","prevProps","prevState","_this3","_this$props","classes","react_default","a","createElement","Grid_default","item","xs","Card_default","className","card","details","CardContent_default","content","Typography_default","component","variant","title","color","controls","IconButton_default","onClick","aria-label","PauseCircleFilled_default","PlayArrow_default","Favorite_default","Link_default","href","artistViewUrl","target","price","trackPrice","CardMedia_default","collectionName","cover","image","artworkUrl","Component","withStyles","theme","display","flexDirection","width","flex","alignItems","paddingLeft","spacing","unit","paddingBottom","paddingRight","addSongSuccess","addToLocalStorage","dispatch","prevIdes","localStorage","getItem","setItem","split","trim","currentIdes","join","connect","CardList","containers_CardItem","key","isfavorite","SearchingPage","components_CardList","omponent","gutterBottom","align","Favorites","Player","typeOfPage","history","location","pathname","reverse","_this$props$track","track","favoritesSongs","searchingSongs","playNext","_this$props$playerInf","playPrevious","_this$props$playerInf2","slice","addRootPath","push","_this$props2","AppBar_default","appBar","Toolbar_default","toolbar","songInfo","name","noWrap","SkipPrevious_default","Pause_default","SkipNext_default","top","bottom","defineProperty","breakpoints","up","position","margin","SwipeableTemporaryDrawer","toggleDrawer","open","clearStorage","forEach","removeItem","SwipeableDrawer_default","isOpen","onClose","onOpen","role","onKeyDown","list","List_default","RouterLink","to","ListItem_default","button","Search_default","ListItemText_default","Divider_default","DeleteForever_default","React","Menu","searchingValue","e","linkParams","value","getSongs","Fragment","root","menuButton","Menu_default","grow","search","searchIcon","lib","element","InputBase","minLength","debounceTimeout","onChange","placeholder","inputRoot","input","inputInput","containers_SwipeableTemporaryDrawer","flexGrow","marginLeft","marginRight","borderRadius","shape","backgroundColor","fade","common","white","&:hover","height","pointerEvents","justifyContent","paddingTop","transition","transitions","create","&:focus","createSongObject","url","artworkUrl100","fetchSongs","str","fetch","then","response","json","fetchSongsSuccess","results","catch","err","Controller","playSong","audio","play","pause","ids","Audio","onended","onloadeddata","src","react_router_dom","react_router","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","core_styles","containers_Controller","document","getElementById"],"mappings":"mOAceA,EAdG,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,OAAQC,EAAOC,MACb,IAAK,0BACH,MAAyB,oBAAfD,EAAOE,MAAuBN,EAAMO,MAAM,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,EAAOE,KAAKG,UACrF,GAAAC,OAAAC,OAAAC,EAAA,EAAAD,CAAWX,GAAX,CAAkBI,EAAOE,OAEpBN,EAAMa,OAAO,SAAAL,GAAI,OAAIA,EAAKC,UAAYL,EAAOE,KAAKG,UAE3D,QACE,OAAOT,ICkBEc,EA3BD,WAAwB,IAAvBd,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQC,EAAOC,MACb,IAAK,sBACH,OAAOM,OAAAC,EAAA,EAAAD,CAAIP,EAAOE,MAEpB,IAAK,yBACH,OAAGN,EAAMe,KAAK,SAAAP,GAAI,OAAIA,EAAKC,UAAYL,EAAOY,KACvCL,OAAAC,EAAA,EAAAD,CAAIX,EAAMiB,IAAI,SAAAT,GACnB,OAAGA,EAAKC,UAAYL,EAAOY,IACzBR,EAAKU,YAAcV,EAAKU,WACjBV,GAGFA,KAGFR,EAET,IAAK,oBACH,MAAO,CAACI,EAAOe,OAEjB,QACE,OAAOnB,ICtBPoB,EAAe,CACnBC,UAAW,GACXC,WAAW,EACXb,QAAS,EACTc,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,MAAO,GA0BMC,EAvBI,WAAkC,IAAjC3B,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBmB,EAAchB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAOC,MACb,IAAK,mBACH,IAAMuB,EAASjB,OAAOkB,OAAO,GAAI7B,GAYjC,OAVA4B,EAAOP,UAAYjB,EAAOI,KAAKsB,WAC/BF,EAAOnB,QAAUL,EAAOI,KAAKC,QAC7BmB,EAAON,UAAYlB,EAAOI,KAAKsB,aAAe9B,EAAMqB,YAAarB,EAAMsB,UACvEM,EAAOL,WAAanB,EAAOI,KAAKe,WAChCK,EAAOJ,UAAYpB,EAAOI,KAAKgB,UAC/BI,EAAOH,SAAWrB,EAAOqB,SACzBG,EAAOF,MAAQtB,EAAOqB,SAASM,UAAU,SAAAC,GAAQ,OAAIA,EAASvB,UAAYL,EAAOI,KAAKC,UACtFmB,EAAOK,KAAOL,EAAOF,QAAUtB,EAAOqB,SAASvB,OAAO,EAAI,EAAI0B,EAAOF,MAAQ,EAC7EE,EAAOM,SAA4B,IAAjBN,EAAOF,MAActB,EAAOqB,SAASvB,OAAO,EAAI0B,EAAOF,MAAQ,EAE1EE,EAET,QACE,OAAO5B,ICjBEmC,EAXE,WAAwB,IAAvBnC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvC,OAAQC,EAAOC,MACb,IAAK,gBACH,SAAAK,OAAUN,EAAOgC,KAAjB,KAEF,QACE,OAAOpC,ICCEqC,EADCC,YAAgB,CAACX,aAAYb,QAAOf,YAAWoC,qBCJlDI,EAAS,CACpBC,KAAMC,yBAAe,CACnBC,QAAS,CACPC,QAAS,CACPH,KAAM,UACNI,aAAc,WAEhBC,UAAW,CACTL,KAAM,UACNI,aAAc,WAEhBzB,MAAO,CACLqB,KAAM,UACNI,aAAc,WAEhBE,WAAY,CACVC,MAAO,UACPC,QAAS,QAEXC,KAAM,CACJN,QAAS,sBACTE,UAAW,sBACXK,SAAU,sBACVC,KAAM,sBACNC,KAAM,uBAERC,QAAS,sBACTjD,OAAQ,CACNkD,OAAQ,sBACRC,MAAO,sBACPC,aAAc,GACdC,SAAU,sBACVP,SAAU,sBACVQ,mBAAoB,wBAGxBC,WAAY,CACVC,iBAAiB,qPCGjBC,6MAEJ7D,MAAQ,CACN8D,oBAAqB,aAGvBC,iBAAmB,WACjB,IACMtC,EADauC,EAAKC,MAAMC,SACAF,EAAKC,MAAMlE,UAAYiE,EAAKC,MAAME,UAChEH,EAAKC,MAAMG,gBAAgBJ,EAAKC,MAAMzD,KAAMiB,MAa9C4C,oBAAsB,WACpBL,EAAKC,MAAMK,qBAAqBN,EAAKC,MAAMzD,MAC3CwD,EAAKO,SACiC,YAAnCP,EAAKhE,MAAM8D,oBACR,CAACA,oBAAqB,SACtB,CAACA,oBAAqB,gGAfV,IAAAU,EAAAC,KACfA,KAAKR,MAAMlE,UAAUgB,KAAK,SAAAP,GAAI,OAAIA,EAAKC,UAAY+D,EAAKP,MAAMzD,KAAKC,WACpEgE,KAAKF,SAAS,CAACT,oBAAqB,qDAGrBY,EAAWC,GACxBF,KAAKR,MAAMlE,UAAUG,QAA4C,UAAlCyE,EAAUb,qBAC3CW,KAAKF,SAAS,CAACT,oBAAqB,6CAY/B,IAAAc,EAAAH,KAAAI,EAC+BJ,KAAKR,MAAnCa,EADDD,EACCC,QAAStE,EADVqE,EACUrE,KAAMmB,EADhBkD,EACgBlD,WAEvB,OACEoD,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,MAAI,EAACC,GAAI,IACbL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAMM,UAAWR,EAAQS,MACvBR,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQU,SACtBT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAaM,UAAWR,EAAQY,SAC9BX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYY,UAAU,KAAKC,QAAQ,KAAKC,MAAK,oBAAApF,OAAsBF,EAAKgB,YACrEhB,EAAKgB,WAERuD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYa,QAAQ,YAAYE,MAAM,gBAAgBD,MAAK,kBAAApF,OAAoBF,EAAKe,aACjFf,EAAKe,aAGVwD,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQkB,UACtBjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CACEc,MAAOnE,EAAWL,WAAaK,EAAWN,YAAcb,EAAKsB,WACzD,QACA,OACJoE,QAASzB,KAAKV,iBACdoC,aAAcxE,EAAWL,WAAaK,EAAWN,YAAcb,EAAKsB,WAChE,QACA,QAGHH,EAAWL,WAAaK,EAAWN,YAAcb,EAAKsB,WACnDiD,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAOe,MAAM,YACbhB,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAee,MAAM,aAG3BhB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CACEkB,QAASzB,KAAKJ,oBACd8B,aAAW,kBACXL,MAAOrB,KAAKR,MAAMlE,UAAUgB,KAAK,SAAAP,GAAI,OAAIA,EAAKC,UAAYmE,EAAKX,MAAMzD,KAAKC,UACtE,WACA,gBAEJsE,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAAce,MAAOtB,KAAKzE,MAAM8D,uBAGE,UAAnCW,KAAKzE,MAAM8D,oBACRiB,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAMwB,KAAMhG,EAAKiG,cAAeC,OAAO,UACvC3B,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYM,UAAWR,EAAQ6B,MAAOd,QAAQ,YAAYE,MAAM,gBAAgBD,MAAM,kBAAtF,mBAIAf,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYM,UAAWR,EAAQ6B,MAAOd,QAAQ,YAAYE,MAAM,iBAC/DvF,EAAKoG,WADN,OAMR7B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CACEc,MAAOtF,EAAKsG,eACZxB,UAAWR,EAAQiC,MACnBC,MAAOxG,EAAKyG,cAGhBlC,EAAAC,EAAAC,cAAA,mBA1FeiC,aA2GRC,uBAvIA,SAAAC,GAAK,MAAK,CAEvB7B,KAAM,CACJ8B,QAAS,QAEX7B,QAAS,CACP6B,QAAS,OACTC,cAAe,SACfC,MAAO,QAET7B,QAAS,CACP8B,KAAM,YAERT,MAAO,CACLQ,MAAO,KAETvB,SAAU,CACRqB,QAAS,OACTI,WAAY,SACZC,YAAaN,EAAMO,QAAQC,KAC3BC,cAAeT,EAAMO,QAAQC,MAE/BjB,MAAO,CACLe,YAAaN,EAAMO,QAAQC,KAC3BE,aAAcV,EAAMO,QAAQC,QA+GjBT,CAAmBtD,GC3IrBS,EAAuB,SAAAtD,GAAE,MAAK,CACzCA,KACAX,KAAM,2BAGK0H,EAAiB,SAACvH,EAAMiB,GAAP,MAAqB,CACjDjB,OACAiB,WACApB,KAAM,qBAGKN,EAAY,SAAAO,GAAI,MAAK,CAChCA,OACAD,KAAM,4BCCO2H,EAtBW,SAACxH,GAAD,OAAU,SAAAyH,GAClC,IAAMC,EAAWC,aAAaC,QAAQ,aAEtC,GAAuB,kBAAbF,EACRC,aAAaE,QAAQ,YAAa7H,EAAKC,SAEvCwH,EAAS3D,EAAqB9D,EAAKC,UACnCwH,EAASlI,EAAUS,SACd,GAAG0H,EAASI,MAAM,KAAK/H,MAAM,SAAAS,GAAE,OAAIA,EAAKR,EAAKC,UAClD0H,aAAaE,QAAQ,aAAcH,EAAW,IAAM1H,EAAKC,SAAS8H,QAElEN,EAAS3D,EAAqB9D,EAAKC,UACnCwH,EAASlI,EAAUS,QACd,CACL,IAAMgI,EAAcN,EAASI,MAAM,KAAKzH,OAAO,SAAAG,GAAE,OAAIA,EAAKR,EAAKC,UAC/D0H,aAAaE,QAAQ,YAAaG,EAAYC,KAAK,KAAKF,QAExDN,EAAS3D,EAAqB9D,EAAKC,UACnCwH,EAASlI,EAAUS,OCJRkI,cAXS,SAAA1I,GAAK,MAAK,CAChCD,UAAWC,EAAMD,UACjB4B,WAAY3B,EAAM2B,WAClBwC,UAAWnE,EAAMc,QAGQ,SAAAmH,GAAQ,MAAK,CACtC3D,qBAAsB,SAAC9D,GAAD,OAAUyH,EAASD,EAAkBxH,KAC3D4D,gBAAiB,SAAC5D,EAAMiB,GAAP,OAAoBwG,EAASF,EAAevH,EAAMiB,OAGtDiH,CAGb7E,GCJa8E,EAXE,SAAA1E,GACb,OAAOA,EAAMnD,MAAMG,IAAI,SAAAT,GAAI,OACvBuE,EAAAC,EAAAC,cAAC2D,EAAD,CAAUC,IAAKrI,EAAKC,QAASyD,SAAUD,EAAM6E,WAAYtI,KAAMA,OCcxDuI,GAdO,SAAA9E,GAAK,OACzBA,EAAMnD,MAAMZ,OACR6E,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,MAAI,EAACC,GAAI,IACfL,EAAAC,EAAAC,cAAC+D,EAAD,CAAU9E,UAAU,EAAOpD,MAASmD,EAAMnD,SAE1CiE,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYiE,SAAS,KAAKpD,QAAQ,KAAKE,MAAM,YAAYmD,cAAY,EAACC,MAAM,UAA5E,uCCJST,eAJS,SAAA1I,GAAK,MAAK,CAChCc,MAAOd,EAAMc,QAGA4H,CAAyBK,ICezBK,GAhBG,SAAAnF,GAChB,OACEA,EAAMlE,UAAUG,OACZ6E,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,MAAI,EAACC,GAAI,IACfL,EAAAC,EAAAC,cAAC+D,EAAD,CAAUF,YAAU,EAAChI,MAAOmD,EAAMlE,aAElCgF,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYiE,SAAS,KAAKpD,QAAQ,KAAKE,MAAM,YAAYmD,cAAY,EAACC,MAAM,UAA5E,iCCJOT,eALS,SAAA1I,GAAK,MAAK,CAC9Bc,MAAOd,EAAMc,MAAMD,OAAO,SAAAL,GAAI,OAAIA,EAAKU,aACvCnB,UAAWC,EAAMD,YAGN2I,CAAyBU,oHC4BlCC,8MAQJtF,iBAAmB,WACjB,IAAMuF,EAAatF,EAAKC,MAAMsF,QAAQC,SAASC,SAASnB,MAAM,OAAOoB,UAAU,GADxDC,EAEI3F,EAAKC,MAAM2F,MAA/B7J,EAFgB4J,EAEhB5J,UAAWe,EAFK6I,EAEL7I,MAFK+D,EAG8Bb,EAAKC,MAAnD4F,EAHgBhF,EAGhBgF,eAAgBC,EAHAjF,EAGAiF,eAHAjF,EAGgBlD,WAEzBJ,WAEZxB,EAAUG,OACN8D,EAAKC,MAAMG,gBAAgBrE,EAAU,GAAI8J,GACzC7F,EAAKC,MAAMG,gBAAgBtD,EAAM,GAAIgJ,GAElB,cAAfR,GAA8BO,EAAe,GACrD7F,EAAKC,MAAMG,gBAAgByF,EAAe,GAAIA,IACrCP,GAAcQ,EAAe,IACtC9F,EAAKC,MAAMG,gBAAgB0F,EAAe,GAAIA,MAGlDC,SAAW,WAAM,IAAAC,EACsBhG,EAAKC,MAAMtC,WAA1CF,EADSuI,EACTvI,SAAUQ,EADD+H,EACC/H,KADD+H,EACOzI,YACe,IAApBE,EAASvB,QACxB8D,EAAKC,MAAMG,gBAAgB3C,EAASQ,GAAOR,MAG/CwI,aAAe,WAAM,IAAAC,EACsBlG,EAAKC,MAAMtC,WAA9CF,EADayI,EACbzI,SAAUS,EADGgI,EACHhI,SADGgI,EACO3I,YACW,IAApBE,EAASvB,QACxB8D,EAAKC,MAAMG,gBAAgB3C,EAASS,GAAWT,uFAhCjD,IAAMU,EAAWsC,KAAKR,MAAMsF,QAAQC,SAASC,SAASnB,MAAM,KAAK6B,MAAM,EAAE,GAAG1B,KAAK,KAAKF,OACtF9D,KAAKR,MAAMmG,YAAYjI,GACpBsC,KAAKR,MAAMsF,QAAQC,SAASC,SAASvJ,SAAWiC,EAASjC,QAC1DuE,KAAKR,MAAMsF,QAAQc,KAAnB,GAAA3J,OAA2ByB,EAA3B,uCAgCI,IAAAmI,EACyB7F,KAAKR,MAA5Ba,EADFwF,EACExF,QAASnD,EADX2I,EACW3I,WACjB,OACEoD,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,CAAQe,MAAM,UAAUT,UAAWR,EAAQ0F,QACzCzF,EAAAC,EAAAC,cAACwF,GAAAzF,EAAD,CAASM,UAAWR,EAAQ4F,SAC1B3F,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ6F,UACtB5F,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAY4F,KAAK,YAAYtF,UAAWR,EAAQgB,MAAOD,QAAQ,KAAKE,MAAM,UAAU8E,QAAM,GACvFlJ,EAAWH,WAEduD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAY4F,KAAK,aAAatF,UAAWR,EAAQgB,MAAOD,QAAQ,KAAKE,MAAM,YAAY8E,QAAM,GAC1FlJ,EAAWJ,aAGhBwD,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQkB,UACtBjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAYkB,QAASzB,KAAKwF,aAAclE,MAAM,YAAYI,aAAW,YACnEpB,EAAAC,EAAAC,cAAC6F,GAAA9F,EAAD,OAEFD,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CACEkB,QAASzB,KAAKV,iBACdoC,aAAYxE,EAAWL,UACnB,QACA,QAGHK,EAAWL,UACRyD,EAAAC,EAAAC,cAAC8F,GAAA/F,EAAD,CAAOe,MAAM,cACbhB,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAee,MAAM,eAG3BhB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAYkB,QAASzB,KAAKsF,SAAUhE,MAAM,YAAYI,aAAW,QAC/DpB,EAAAC,EAAAC,cAAC+F,GAAAhG,EAAD,iBAnEOkC,aA4ENC,wBArGA,SAACC,GAAD,MAAY,CACzBoD,OAAQ,CACNS,IAAK,OACLC,OAAQ,GAEVpF,MAAMnF,OAAAwK,GAAA,EAAAxK,CAAA,CACJ0G,QAAS,QACRD,EAAMgE,YAAYC,GAAG,MAAQ,CAC5BhE,QAAS,UAGbsD,SAAS,CACPW,SAAU,YAEZZ,QAAQ,CACNrD,QAAS,OACTI,WAAY,UAEdzB,SAAU,CACRqB,QAAS,OACTI,WAAY,SACZ8D,OAAQ,YAgFGpE,CAAmBkC,IC3FnBX,eAhBS,SAAA1I,GAAK,MAAK,CAChC4J,MAAO,CACL9I,MAAOd,EAAMc,MAAMD,OAAO,SAAAL,GAAI,OAAIA,EAAKC,UAAYT,EAAM2B,WAAWlB,UACpEV,UAAWC,EAAMD,UAAUc,OAAO,SAAAL,GAAI,OAAIA,EAAKC,UAAYT,EAAM2B,WAAWlB,WAE9EkB,WAAY3B,EAAM2B,WAClBmI,eAAgB9J,EAAMc,MACtB+I,eAAgB7J,EAAMD,UACtBoC,SAAUnC,EAAMmC,WAGS,SAAA8F,GAAQ,MAAK,CACtC7D,gBAAiB,SAAC5D,EAAMiB,GAAP,OAAoBwG,EAASF,EAAevH,EAAMiB,KACnE2I,YAAa,SAAChI,GAAD,OAAU6F,ETaD,SAAA7F,GAAI,MAAK,CAC/BA,OACA/B,KAAM,iBSf0B8B,CAASC,OAG5BsG,CAGbW,uMCJImC,8MAEJC,aAAe,SAAAC,GAAI,OAAI1H,EAAKC,MAAMwH,aAAaC,MAC/CC,aAAe,WACb3H,EAAKC,MAAMlE,UAAU6L,QAAQ,SAAApL,GAAI,OAAIwD,EAAKC,MAAMK,qBAAqB9D,KACrE2H,aAAa0D,WAAW,sFAGjB,IAAAhH,EACuBJ,KAAKR,MAA3Ba,EADDD,EACCC,QAAS3C,EADV0C,EACU1C,SACjB,OACE4C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6G,GAAA9G,EAAD,CACE0G,KAAMjH,KAAKR,MAAM8H,OACjBC,QAASvH,KAAKgH,cAAa,GAC3BQ,OAAQxH,KAAKgH,cAAa,IAE1B1G,EAAAC,EAAAC,cAAA,OACEiH,KAAK,SACLhG,QAASzB,KAAKgH,cAAa,GAC3BU,UAAW1H,KAAKgH,cAAa,IAE7B1G,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQsH,MACtBrH,EAAAC,EAAAC,cAACoH,GAAArH,EAAD,KACED,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAMY,UAAW0G,IAAYC,GAAIpK,GAC/B4C,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAUyH,QAAM,GACd1H,EAAAC,EAAAC,cAACyH,GAAA1H,EAAD,MACAD,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CAAcrC,QAAS,aAG3BoC,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAMY,UAAW0G,IAAYC,GAAIpK,EAAS,aACxC4C,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAUyH,QAAM,GACd1H,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,MACAD,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CAAcrC,QAAS,gBAG3BoC,EAAAC,EAAAC,cAAC2H,GAAA5H,EAAD,MACAD,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CACEY,UAAW0G,IACXpG,QAASzB,KAAKkH,aACdY,GAAG,KAEHxH,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAUyH,QAAM,GACd1H,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,MACAD,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CAAcrC,QAAS,kCA5CJmK,IAAM5F,WA+D9BC,wBArEA,CACbiF,KAAM,CACJ7E,MAAO,MAmEIJ,CAAmBqE,ICrEnB9C,eAVS,SAAA1I,GAAK,MAAK,CAChCD,UAAWC,EAAMD,UACjBoC,SAAUnC,EAAMmC,WAIS,SAAA8F,GAAQ,MAAK,CACtC3D,qBAAsB,SAAC9D,GAAD,OAAUyH,EAASD,EAAkBxH,OAG9CkI,CAGb8C,cCyDIuB,8MACJ/M,MAAQ,CACN+L,QAAQ,KAGViB,eAAiB,SAAAC,GACf,IAAMC,EAAaD,EAAEvG,OAAOyG,MAAM5E,OAAOD,MAAM,OAAOG,KAAK,KACxDyE,GACDlJ,EAAKC,MAAMmJ,SAASF,MAGxBzB,aAAe,SAAAC,GAAI,OAAI,WACrB1H,EAAKO,SAAS,CACZwH,OAAQL,8EAIH,IACC5G,EAAYL,KAAKR,MAAjBa,QACFwE,EAAa7E,KAAKR,MAAM9B,WAAasC,KAAKR,MAAMsF,QAAQC,SAASC,SACvE,OACE1E,EAAAC,EAAAC,cAACF,EAAAC,EAAMqI,SAAP,KACEtI,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQwI,MACtBvI,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,CAAQsG,SAAS,UACfvG,EAAAC,EAAAC,cAACwF,GAAAzF,EAAD,KACED,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAYkB,QAASzB,KAAKgH,cAAa,GAAOnG,UAAWR,EAAQyI,WAAYxH,MAAM,UAAUI,aAAW,eACtGpB,EAAAC,EAAAC,cAACuI,GAAAxI,EAAD,OAEFD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYM,UAAWR,EAAQgB,MAAOD,QAAQ,KAAKE,MAAM,UAAU8E,QAAM,GACtEvB,EAAa,iBAAmB,kBAEnCvE,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ2I,OACvBnE,EACGvE,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ4I,QACxB3I,EAAAC,EAAAC,cAAA,OAAKK,UAAWR,EAAQ6I,YACtB5I,EAAAC,EAAAC,cAACyH,GAAA1H,EAAD,OAEFD,EAAAC,EAAAC,cAAC2I,GAAA,cAAD,CACEC,QAASC,KACTC,UAAW,EACXC,gBAAiB,IACjBC,SAAUxJ,KAAKuI,eACfkB,YAAY,UACZpJ,QAAS,CACPwI,KAAMxI,EAAQqJ,UACdC,MAAOtJ,EAAQuJ,eAInB,MAKVtJ,EAAAC,EAAAC,cAACqJ,GAAD,CAA0BvC,OAAQtH,KAAKzE,MAAM+L,OAAQN,aAAchH,KAAKgH,uBAtD7DvE,aAiEJC,wBA7HA,SAAAC,GAAK,MAAK,CACvBkG,KAAM,CACJ/F,MAAO,QAETkG,KAAM,CACJc,SAAU,GAEZhB,WAAY,CACViB,YAAa,GACbC,YAAa,IAEf3I,MAAMnF,OAAAwK,GAAA,EAAAxK,CAAA,CACJ0G,QAAS,QACRD,EAAMgE,YAAYC,GAAG,MAAQ,CAC5BhE,QAAS,UAGbqG,OAAO/M,OAAAwK,GAAA,EAAAxK,CAAA,CACL2K,SAAU,WACVoD,aAActH,EAAMuH,MAAMD,aAC1BE,gBAAiBC,gBAAKzH,EAAM1E,QAAQoM,OAAOC,MAAO,KAClDC,UAAW,CACTJ,gBAAiBC,gBAAKzH,EAAM1E,QAAQoM,OAAOC,MAAO,MAEpDP,WAAY,EACZjH,MAAO,QACNH,EAAMgE,YAAYC,GAAG,MAAQ,CAC5BmD,WAAYpH,EAAMO,QAAQC,KAC1BL,MAAO,SAGXoG,WAAY,CACVpG,MAA4B,EAArBH,EAAMO,QAAQC,KACrBqH,OAAQ,OACR3D,SAAU,WACV4D,cAAe,OACf7H,QAAS,OACTI,WAAY,SACZ0H,eAAgB,UAElBhB,UAAW,CACTpI,MAAO,UACPwB,MAAO,QAET8G,WAAW1N,OAAAwK,GAAA,EAAAxK,CAAA,CACTyO,WAAYhI,EAAMO,QAAQC,KAC1BE,aAAcV,EAAMO,QAAQC,KAC5BC,cAAeT,EAAMO,QAAQC,KAC7BF,YAAkC,GAArBN,EAAMO,QAAQC,KAC3ByH,WAAYjI,EAAMkI,YAAYC,OAAO,SACrChI,MAAO,QACNH,EAAMgE,YAAYC,GAAG,MAAQ,CAC5B9D,MAAO,IACPiI,UAAW,CACTjI,MAAO,SAuEAJ,CAAmB4F,IC3HlB0C,GAdS,SAACnP,EAAMY,GAAP,OAAsBZ,EAAKW,IAAI,SAAAT,GAAI,MACzD,CACCe,WAAYf,EAAKe,WACjBC,UAAWhB,EAAKgB,UAChBM,WAAYtB,EAAKsB,WACjBmF,YAPgByI,EAOQlP,EAAKmP,cAPND,EAAIvF,MAAM,GAAG,IAAM,iBAQ1CvD,WAAYpG,EAAKoG,WACjBnG,QAASD,EAAKC,QACdqG,eAAgBtG,EAAKsG,eACrBL,cAAejG,EAAKiG,cACpBvF,cAZgB,IAAAwO,KCoBLE,GAZI,SAACC,EAAK7O,GAAN,OAAa,SAAAiH,GAAQ,MAAmB,qBAAPjH,EAE9C8O,MAAK,wCAAApP,OAAyCmP,EAAzC,0BACNE,KAAK,SAAAC,GAAQ,OAAGA,EAASC,SACzBF,KAAK,SAAAzP,GAAI,OAAI2H,EdZe,SAAA3H,GAAI,MAAK,CACxCA,OACAD,KAAM,uBcUmB6P,CAAkBT,GAAiBnP,EAAK6P,SAAS,OACvEC,MAAM,SAAAC,GAAG,OAAIpI,EdRuB,CACvC9G,McOyCkP,EdNzChQ,KAAM,wBcQFyP,MAAK,sCAAApP,OAAuCM,EAAvC,iBACJ+O,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAzP,GAAI,OAAI2H,EAASlI,EAAU0P,GAAiBnP,EAAK6P,SAAS,GAAM,OACrEC,MAAM,SAAAC,GAAG,OAAIpI,EdQwB,CAC1C9G,McT8CkP,EdU9ChQ,KAAM,0BehBOqI,eARS,SAAA1I,GAAK,MAAK,CAChCmC,SAAUnC,EAAMmC,WAGS,SAAA8F,GAAQ,MAAK,CACtCmF,SAAU,SAACyC,GAAD,OAAS5H,EAAS2H,GAAWC,OAG1BnH,CAA6CqE,IC8C7CuD,8MAvBbC,SAAW,kBAAMvM,EAAKwM,MAAMC,UAC5BC,MAAQ,kBAAM1M,EAAKwM,MAAME,4FA3BN,IAAAlM,EAAAC,KACXkM,EAAMxI,aAAaC,QAAQ,aACf,kBAARuI,GAAoBA,GAC5BA,EAAIrI,MAAM,KAAKsD,QAAQ,SAAA5K,GAAE,OAAIwD,EAAKP,MAAMmJ,SAAS,KAAMpM,gDAGxC0D,GAAW,IAAAE,EAAAH,KAAAuF,EACiBvF,KAAKR,MAAMtC,WAAnDN,EADuB2I,EACvB3I,UAAWC,EADY0I,EACZ1I,UAAWG,EADCuI,EACDvI,SAAUQ,EADT+H,EACS/H,KAElCZ,IAAcqD,EAAU/C,WAAWN,WACpCoD,KAAK+L,MAAQ,IAAII,MAAMvP,GACvBoD,KAAK+L,MAAMK,QAAU,WAAOjM,EAAKX,MAAMG,gBAAgB3C,EAASQ,GAAOR,IACvEgD,KAAK+L,MAAMM,aAAe,kBAAMlM,EAAK4L,MAAMC,cACpBtQ,IAAfsE,KAAK+L,QACblP,EAAYmD,KAAK8L,WAAa9L,KAAKiM,yDAIfhM,GAAW,IAC5BrD,EAAaoD,KAAKR,MAAMtC,WAAxBN,UAIL,OAHGqD,EAAU/C,WAAWN,WAAaA,IAAcqD,EAAU/C,WAAWN,YACtEoD,KAAK+L,MAAMO,IAAM,IAEZ,sCAMD,IACC5O,EAAYsC,KAAKR,MAAjB9B,SACP,OACE4C,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,KACEjM,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAO7O,KAAMD,EAAUyD,UAAWmH,KAAQhI,EAAAC,EAAAC,cAAA,WAC1CF,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,OAAK,EAAC9O,KAAMD,EAAUyD,UAAWmD,KACxChE,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,OAAK,EAAC9O,KAAMD,EAAS,YAAayD,UAAWwD,KAAarE,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAC3EF,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAO7O,KAAMD,EAAUyD,UAAWyD,aArCjBnC,aCOVwB,eAVS,SAAA1I,GAAK,MAAK,CAChC2B,WAAY3B,EAAM2B,WAClBQ,SAAUnC,EAAMmC,WAGS,SAAA8F,GAAQ,MAAK,CACtCmF,SAAU,SAACyC,EAAK7O,GAAN,OAAaiH,EAAS2H,GAAWC,EAAK7O,KAChDoD,gBAAiB,SAAC5D,EAAMiB,GAAP,OAAoBwG,EAASF,EAAevH,EAAMiB,OAGtDiH,CAGb4H,ICNIa,GAAmBC,OAAOC,sCAAwCC,IAClEC,GAAQC,YAAYnP,EAAS8O,GAAiBM,YAAgBC,OAEpEC,IAASC,OACP7M,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,CAAUN,MAAOA,IACfxM,EAAAC,EAAAC,cAAC6M,EAAA,iBAAD,CAAkB1K,MAAO7E,EAAOC,MAChCuC,EAAAC,EAAAC,cAAC8M,GAAD,QAGFC,SAASC,eAAe","file":"static/js/main.639f6694.chunk.js","sourcesContent":["const favorites = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_FAVORITE_SUCCESS\": {\r\n      if(typeof action.data != \"undefined\" && state.every(song => song.trackId - action.data.trackId))\r\n        return [...state, action.data];\r\n\r\n      return state.filter(song => song.trackId !== action.data.trackId)\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default favorites;\r\n","const songs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_SONGS_SUCCESS\": {\r\n      return [...action.data]\r\n    }\r\n    case \"SWITCH_FAVORITES_STATE\": {\r\n      if(state.some(song => song.trackId === action.id))\r\n      return [...state.map(song =>{\r\n        if(song.trackId === action.id){\r\n          song.isFavorite = !song.isFavorite;\r\n          return song\r\n        }\r\n\r\n        return song\r\n      })];\r\n\r\n      return state\r\n    }\r\n    case \"FETCH_SONGS_ERROR\":{\r\n      return [action.error];\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default songs;","const initialState = {\r\n  trackLink: \"\",\r\n  isPlaying: false,\r\n  trackId: 0,\r\n  artistName: \"\",\r\n  trackName: \"\",\r\n  playlist: [],\r\n  index: 0\r\n};\r\n\r\nconst playerInfo = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_SONG_SUCCESS\": {\r\n      const newObj = Object.assign({}, state);\r\n\r\n      newObj.trackLink = action.song.previewUrl;\r\n      newObj.trackId = action.song.trackId;\r\n      newObj.isPlaying = action.song.previewUrl === state.trackLink ? !state.isPlaying : true;\r\n      newObj.artistName = action.song.artistName;\r\n      newObj.trackName = action.song.trackName;\r\n      newObj.playlist = action.playlist;\r\n      newObj.index = action.playlist.findIndex(listItem => listItem.trackId === action.song.trackId);\r\n      newObj.next = newObj.index === action.playlist.length-1 ? 0 : newObj.index + 1;\r\n      newObj.previous = newObj.index === 0 ? action.playlist.length-1 : newObj.index - 1;\r\n\r\n      return newObj\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default playerInfo;\r\n","const rootPath = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ROOT_PATH\": {\r\n      return `${action.path}/`\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default rootPath;\r\n","import { combineReducers } from \"redux\";\r\nimport favorites from \"./favorites\"\r\nimport songs from \"./songs\"\r\nimport playerInfo from \"./playerInfo\"\r\nimport rootPath from \"./rootPath\";\r\n\r\nconst reducer = combineReducers({playerInfo, songs, favorites, rootPath});\r\nexport default reducer","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const themes = {\r\n  main: createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#3F5866\",\r\n        contrastText: \"#F2F2F2\"\r\n      },\r\n      secondary: {\r\n        main: \"#BDD3DE\",\r\n        contrastText: \"#F2F2F2\"\r\n      },\r\n      error: {\r\n        main: \"#FF9000\",\r\n        contrastText: \"#F0F0DF\"\r\n      },\r\n      background: {\r\n        paper: \"#f2f2f2\",\r\n        default: \"#fff\"\r\n      },\r\n      text: {\r\n        primary: \"rgba(0, 0, 0, 0.87)\",\r\n        secondary: \"rgba(0, 0, 0, 0.54)\",\r\n        disabled: \"rgba(0, 0, 0, 0.38)\",\r\n        hint: \"rgba(0, 0, 0, 0.38)\",\r\n        icon: \"rgba(0, 0, 0, 0.12)\"\r\n      },\r\n      divider: \"rgba(0, 0, 0, 0.12)\",\r\n      action: {\r\n        active: \"rgba(0, 0, 0, 0.54)\",\r\n        hover: \"rgba(0, 0, 0, 0.08)\",\r\n        hoverOpacity: 0.1,\r\n        selected: \"rgba(0, 0, 0, 0.14)\",\r\n        disabled: \"rgba(0, 0, 0, 0.26)\",\r\n        disabledBackground: \"rgba(0, 0, 0, 0.12)\"\r\n      }\r\n    },\r\n    typography: {\r\n      useNextVariants: true\r\n    }\r\n  })\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Pause from \"@material-ui/icons/PauseCircleFilled\"\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n\r\n  card: {\r\n    display: 'flex'\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: \"100%\"\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 150,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n  },\r\n  price: {\r\n    paddingLeft: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit\r\n  }\r\n});\r\n\r\nclass CardItem extends Component {\r\n\r\n  state = {\r\n    favoriteButtonColor: \"primary\"\r\n  };\r\n\r\n  switchSoundState = () => {\r\n    const isFavorite = this.props.favorite;\r\n    const playlist = isFavorite ? this.props.favorites : this.props.searching;\r\n    this.props.addSongToPlayer(this.props.song, playlist);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(this.props.favorites.some(song => song.trackId === this.props.song.trackId))\r\n      this.setState({favoriteButtonColor: \"error\"})\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(!this.props.favorites.length && prevState.favoriteButtonColor === \"error\")\r\n      this.setState({favoriteButtonColor: \"primary\"});\r\n  }\r\n\r\n  switchFavoriteState = () => {\r\n    this.props.switchFavoritesState(this.props.song);\r\n    this.setState(\r\n      (this.state.favoriteButtonColor === \"primary\")\r\n        ? {favoriteButtonColor: \"error\"}\r\n        : {favoriteButtonColor: \"primary\"}\r\n    )\r\n  };\r\n\r\n  render() {\r\n    const { classes, song, playerInfo } = this.props;\r\n\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Card className={classes.card}>\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Typography component=\"h5\" variant=\"h5\" title={`name of track is ${song.trackName}`}>\r\n                {song.trackName}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" title={`artist name is ${song.artistName}`}>\r\n                {song.artistName}\r\n              </Typography>\r\n            </CardContent>\r\n            <div className={classes.controls}>\r\n              <IconButton\r\n                title={playerInfo.isPlaying && playerInfo.trackLink === song.previewUrl\r\n                  ? \"Pause\"\r\n                  : \"Play\"}\r\n                onClick={this.switchSoundState}\r\n                aria-label={  playerInfo.isPlaying && playerInfo.trackLink === song.previewUrl\r\n                  ? \"Pause\"\r\n                  : \"Play\"\r\n                }\r\n              >\r\n                {playerInfo.isPlaying && playerInfo.trackLink === song.previewUrl\r\n                  ? <Pause color=\"primary\"/>\r\n                  : <PlayArrowIcon color=\"primary\"/>\r\n                }\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={this.switchFavoriteState}\r\n                aria-label=\"Add-to-favorite\"\r\n                title={this.props.favorites.some(song => song.trackId === this.props.song.trackId)\r\n                  ? \"Favorite\"\r\n                  : \"Not favorite\"\r\n                }>\r\n                <FavoriteIcon color={this.state.favoriteButtonColor} />\r\n              </IconButton>\r\n\r\n              {this.state.favoriteButtonColor === \"error\"\r\n                ? <Link href={song.artistViewUrl} target=\"_blank\">\r\n                  <Typography className={classes.price} variant=\"subtitle1\" color=\"textSecondary\" title=\"Look on iTunes\">\r\n                    Look on iTunes\r\n                  </Typography>\r\n                </Link>\r\n                : <Typography className={classes.price} variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {song.trackPrice}$\r\n                </Typography>\r\n              }\r\n            </div>\r\n          </div>\r\n          <CardMedia\r\n            title={song.collectionName}\r\n            className={classes.cover}\r\n            image={song.artworkUrl}\r\n          />\r\n        </Card>\r\n        <br/>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nCardItem.propTypes = {\r\n  classes: PropTypes.object,\r\n  favorite: PropTypes.bool,\r\n  favorites: PropTypes.array,\r\n  searching: PropTypes.array,\r\n  song: PropTypes.object,\r\n  playerInfo: PropTypes.object,\r\n  addSongToPlayer: PropTypes.func,\r\n  switchFavoritesState: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(CardItem);\r\n","export const fetchSongsSuccess = data => ({\r\n  data,\r\n  type: \"FETCH_SONGS_SUCCESS\"\r\n});\r\n\r\nexport const fetchSongsError = error => ({\r\n  error,\r\n  type: \"FETCH_SONGS_ERROR\"\r\n});\r\n\r\nexport const switchFavoritesState = id => ({\r\n  id,\r\n  type: \"SWITCH_FAVORITES_STATE\"\r\n});\r\n\r\nexport const addSongSuccess = (song, playlist) => ({\r\n  song,\r\n  playlist,\r\n  type: \"ADD_SONG_SUCCESS\"\r\n});\r\n\r\nexport const favorites = data => ({\r\n  data,\r\n  type: \"ADD_TO_FAVORITE_SUCCESS\"\r\n});\r\n\r\nexport const addToFavoriteError = error => ({\r\n  error,\r\n  type: \"FETCH_SONGS_ERROR\"\r\n});\r\n\r\nexport const rootPath = path => ({\r\n  path,\r\n  type: \"ADD_ROOT_PATH\"\r\n});\r\n","import { favorites, switchFavoritesState } from \"../actions\";\r\n\r\nconst addToLocalStorage = (song) => dispatch => {\r\n  const prevIdes = localStorage.getItem(\"iTunesApp\");\r\n\r\n  if(typeof prevIdes !== \"string\") {\r\n    localStorage.setItem(\"iTunesApp\", song.trackId);\r\n\r\n    dispatch(switchFavoritesState(song.trackId));\r\n    dispatch(favorites(song));\r\n  } else if(prevIdes.split(\" \").every(id => id - song.trackId)){\r\n    localStorage.setItem(\"iTunesApp\", (prevIdes + \" \" + song.trackId).trim());\r\n\r\n    dispatch(switchFavoritesState(song.trackId));\r\n    dispatch(favorites(song));\r\n  } else {\r\n    const currentIdes = prevIdes.split(\" \").filter(id => id - song.trackId);\r\n    localStorage.setItem(\"iTunesApp\", currentIdes.join(\" \").trim());\r\n\r\n    dispatch(switchFavoritesState(song.trackId));\r\n    dispatch(favorites(song));\r\n  }\r\n};\r\n\r\nexport default addToLocalStorage","import { connect } from \"react-redux\";\r\nimport CardItem from \"../../components/CardList/CardItem\";\r\nimport addToLocalStorage from \"../actionCreators/addToLocalStorage\";\r\nimport { addSongSuccess } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  favorites: state.favorites,\r\n  playerInfo: state.playerInfo,\r\n  searching: state.songs,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  switchFavoritesState: (song) => dispatch(addToLocalStorage(song)),\r\n  addSongToPlayer: (song, playlist) => dispatch(addSongSuccess(song, playlist))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CardItem);\r\n","import React from \"react\";\r\nimport CardItem from \"../../redux/containers/CardItem\" ;\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CardList = props => {\r\n    return props.songs.map(song =>\r\n        <CardItem key={song.trackId} favorite={props.isfavorite} song={song}/>\r\n      )\r\n  };\r\n\r\nCardList.propTypes = {\r\n  isfavorite: PropTypes.bool,\r\n  songs: PropTypes.array\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport CardList from \"../CardList/index\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst SearchingPage = props => (\r\n  props.songs.length\r\n    ? <Grid item xs={12}>\r\n      <CardList favorite={false} songs = {props.songs}/>\r\n    </Grid>\r\n    : <Typography omponent=\"h2\" variant=\"h4\" color=\"secondary\" gutterBottom align=\"center\">\r\n      For searching write in input field\r\n    </Typography>\r\n);\r\n\r\nSearchingPage.propTypes = {\r\n  songs: PropTypes.array\r\n};\r\n\r\nexport default SearchingPage;\r\n","import { connect } from \"react-redux\";\r\nimport SearchingPage from \"../../components/SearchingPage\";\r\n\r\nconst mapStateToProps = state => ({\r\n  songs: state.songs\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchingPage);","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardList from \"../CardList\"\r\nimport PropTypes from 'prop-types';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Favorites = props => {\r\n  return (\r\n    props.favorites.length\r\n      ? <Grid item xs={12}>\r\n        <CardList isfavorite songs={props.favorites}/>\r\n      </Grid>\r\n      : <Typography omponent=\"h2\" variant=\"h4\" color=\"secondary\" gutterBottom align=\"center\">\r\n        You don't have favorites yet\r\n      </Typography>\r\n  )};\r\n\r\nFavorites.propTypes = {\r\n  favorites: PropTypes.array,\r\n  favorite: PropTypes.bool\r\n};\r\n\r\nexport default Favorites;\r\n","import { connect } from \"react-redux\";\r\nimport Favorites from \"../../components/Favorites\";\r\n\r\nconst mapStateToProps = state => ({\r\n    songs: state.songs.filter(song => song.isFavorite),\r\n    favorites: state.favorites\r\n  });\r\n\r\nexport default connect(mapStateToProps)(Favorites);\r\n","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Pause from \"@material-ui/icons/Pause\"\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    }\r\n  },\r\n  songInfo:{\r\n    position: \"absolute\"\r\n  },\r\n  toolbar:{\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '0 auto',\r\n  }\r\n});\r\n\r\nclass Player extends Component {\r\n  componentDidMount() {\r\n    const rootPath = this.props.history.location.pathname.split(\"/\").slice(0,2).join(\"/\").trim();\r\n    this.props.addRootPath(rootPath);\r\n    if(this.props.history.location.pathname.length === rootPath.length)\r\n      this.props.history.push(`${rootPath}/`)\r\n  };\r\n\r\n  switchSoundState = () => {\r\n    const typeOfPage = this.props.history.location.pathname.split(/\\//g).reverse()[0];\r\n    const {favorites, songs} = this.props.track;\r\n    const {favoritesSongs, searchingSongs, playerInfo} = this.props;\r\n\r\n    if(playerInfo.artistName) {\r\n\r\n      favorites.length\r\n        ? this.props.addSongToPlayer(favorites[0], favoritesSongs)\r\n        : this.props.addSongToPlayer(songs[0], searchingSongs);\r\n\r\n    } else if(typeOfPage === \"favorites\" && favoritesSongs[0]){\r\n      this.props.addSongToPlayer(favoritesSongs[0], favoritesSongs)\r\n    } else if(!typeOfPage && searchingSongs[0])\r\n      this.props.addSongToPlayer(searchingSongs[0], searchingSongs)\r\n  };\r\n\r\n  playNext = () => {\r\n    let { playlist, next, artistName } = this.props.playerInfo;\r\n    if(artistName && playlist.length !== 1)\r\n      this.props.addSongToPlayer(playlist[next], playlist)\r\n  };\r\n\r\n  playPrevious = () => {\r\n    let { playlist, previous, artistName } = this.props.playerInfo;\r\n    if(artistName && playlist.length !== 1)\r\n      this.props.addSongToPlayer(playlist[previous], playlist)\r\n  };\r\n\r\n  render(){\r\n    const { classes, playerInfo} = this.props;\r\n    return (\r\n      <AppBar color=\"primary\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <div className={classes.songInfo}>\r\n            <Typography name=\"trackName\" className={classes.title} variant=\"h5\" color=\"inherit\" noWrap>\r\n              {playerInfo.trackName}\r\n            </Typography>\r\n            <Typography name=\"artistName\" className={classes.title} variant=\"h6\" color=\"secondary\" noWrap>\r\n              {playerInfo.artistName}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.controls}>\r\n            <IconButton onClick={this.playPrevious} color=\"secondary\" aria-label=\"Previous\">\r\n              <SkipPreviousIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={this.switchSoundState}\r\n              aria-label={playerInfo.isPlaying\r\n                ? \"Pause\"\r\n                : \"Play\"\r\n              }\r\n            >\r\n              {playerInfo.isPlaying\r\n                ? <Pause color=\"secondary\"/>\r\n                : <PlayArrowIcon color=\"secondary\"/>\r\n              }\r\n            </IconButton>\r\n            <IconButton onClick={this.playNext} color=\"secondary\" aria-label=\"Next\">\r\n              <SkipNextIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Player);\r\n","import { connect } from \"react-redux\";\r\nimport Player from \"../../components/Player\";\r\nimport { addSongSuccess, rootPath } from \"../actions\";\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  track: {\r\n    songs: state.songs.filter(song => song.trackId === state.playerInfo.trackId),\r\n    favorites: state.favorites.filter(song => song.trackId === state.playerInfo.trackId)\r\n  },\r\n  playerInfo: state.playerInfo,\r\n  searchingSongs: state.songs,\r\n  favoritesSongs: state.favorites,\r\n  rootPath: state.rootPath\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addSongToPlayer: (song, playlist) => dispatch(addSongSuccess(song, playlist)),\r\n  addRootPath: (path) => dispatch(rootPath(path))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Player);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Favorite from \"@material-ui/icons/Favorite\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteForever from \"@material-ui/icons/DeleteForever\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  }\r\n};\r\n\r\nclass SwipeableTemporaryDrawer extends React.Component {\r\n\r\n  toggleDrawer = open => this.props.toggleDrawer(open);\r\n  clearStorage = () => {\r\n    this.props.favorites.forEach(song => this.props.switchFavoritesState(song));\r\n    localStorage.removeItem(\"iTunesApp\");\r\n  };\r\n\r\n  render() {\r\n    const { classes, rootPath } = this.props;\r\n    return (\r\n      <div>\r\n        <SwipeableDrawer\r\n          open={this.props.isOpen}\r\n          onClose={this.toggleDrawer(false)}\r\n          onOpen={this.toggleDrawer(true)}\r\n        >\r\n          <div\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer(false)}\r\n            onKeyDown={this.toggleDrawer(false)}\r\n          >\r\n            <div className={classes.list}>\r\n              <List>\r\n                <Link component={RouterLink} to={rootPath}>\r\n                  <ListItem button >\r\n                    <SearchIcon/>\r\n                    <ListItemText primary={\"Search\"} />\r\n                  </ListItem>\r\n                </Link>\r\n                <Link component={RouterLink} to={rootPath+\"favorites\"}>\r\n                  <ListItem button >\r\n                    <Favorite />\r\n                    <ListItemText primary={\"Favorites\"} />\r\n                  </ListItem>\r\n                </Link>\r\n                <Divider />\r\n                <Link\r\n                  component={RouterLink}\r\n                  onClick={this.clearStorage}\r\n                  to=\"/\"\r\n                >\r\n                  <ListItem button >\r\n                    <DeleteForever />\r\n                    <ListItemText primary={\"Clear favorites\"} />\r\n                  </ListItem>\r\n                </Link>\r\n              </List>\r\n            </div>\r\n          </div>\r\n        </SwipeableDrawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwipeableTemporaryDrawer.propTypes = {\r\n  classes: PropTypes.object,\r\n  toggleDrawer: PropTypes.func,\r\n  favorites: PropTypes.array,\r\n  switchFavoritesState: PropTypes.func\r\n};\r\n\r\nexport default withStyles(styles)(SwipeableTemporaryDrawer);\r\n","import { connect } from \"react-redux\";\r\nimport SwipeableTemporaryDrawer from \"../../components/Menu/SwipeableTemporaryDrawer\"\r\nimport addToLocalStorage from \"../actionCreators/addToLocalStorage\";\r\n\r\nconst mapStateToProps = state => ({\r\n  favorites: state.favorites,\r\n  rootPath: state.rootPath\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  switchFavoritesState: (song) => dispatch(addToLocalStorage(song))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SwipeableTemporaryDrawer);\r\n","import React, { Component } from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SwipeableTemporaryDrawer from \"../../redux/containers/SwipeableTemporaryDrawer\"\r\nimport {DebounceInput} from 'react-debounce-input';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 250,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nclass Menu extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  searchingValue = e => {\r\n    const linkParams = e.target.value.trim().split(/\\s+/).join(\"+\");\r\n    if(linkParams)\r\n      this.props.getSongs(linkParams)\r\n  };\r\n\r\n  toggleDrawer = open => () => {\r\n    this.setState({\r\n      isOpen: open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const typeOfPage = this.props.rootPath === this.props.history.location.pathname;\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <IconButton onClick={this.toggleDrawer(true)} className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n                {typeOfPage ? \"Searching page\" : \"Favorite songs\"}\r\n              </Typography>\r\n              <div className={classes.grow} />\r\n              {typeOfPage\r\n                ? <div className={classes.search}>\r\n                  <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                  </div>\r\n                  <DebounceInput\r\n                    element={InputBase}\r\n                    minLength={2}\r\n                    debounceTimeout={700}\r\n                    onChange={this.searchingValue}\r\n                    placeholder=\"Song...\"\r\n                    classes={{\r\n                      root: classes.inputRoot,\r\n                      input: classes.inputInput,\r\n                    }}\r\n                  />\r\n                </div>\r\n                : \"\"\r\n              }\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n        <SwipeableTemporaryDrawer isOpen={this.state.isOpen} toggleDrawer={this.toggleDrawer}/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.propTypes = {\r\n  getSongs: PropTypes.func,\r\n  classes: PropTypes.object\r\n};\r\n\r\nexport default withStyles(styles)(Menu);\r\n","const getImg300PX = url => url.slice(0,-13) + \"300x300bb.jpg\";\r\n\r\nconst createSongObject = (data, isFavorite) => data.map(song =>\r\n  ({\r\n    artistName: song.artistName,\r\n    trackName: song.trackName,\r\n    previewUrl: song.previewUrl,\r\n    artworkUrl: getImg300PX(song.artworkUrl100),\r\n    trackPrice: song.trackPrice,\r\n    trackId: song.trackId,\r\n    collectionName: song.collectionName,\r\n    artistViewUrl: song.artistViewUrl,\r\n    isFavorite\r\n  })\r\n);\r\n\r\n export default createSongObject\r\n","import createSongObject from \"./createSongObject\"\r\nimport {\r\n  fetchSongsSuccess,\r\n  fetchSongsError,\r\n  favorites,\r\n  addToFavoriteError\r\n} from \"../actions\";\r\n\r\nconst fetchSongs = (str, id) => dispatch => (typeof id === \"undefined\")\r\n\r\n    ? fetch(`https://itunes.apple.com/search?term=${str}&media=music&limit=10`)\r\n    .then(response=> response.json())\r\n    .then(data => dispatch(fetchSongsSuccess(createSongObject(data.results, false))))\r\n    .catch(err => dispatch(fetchSongsError(err)))\r\n\r\n    : fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`)\r\n      .then(response => response.json())\r\n      .then(data => dispatch(favorites(createSongObject(data.results, true)[0])))\r\n      .catch(err => dispatch(addToFavoriteError(err)));\r\n\r\nexport default fetchSongs\r\n","import { connect } from \"react-redux\";\r\nimport Menu from \"../../components/Menu\";\r\nimport fetchSongs from \"../actionCreators/fetchSongs\";\r\n\r\nconst mapStateToProps = state => ({\r\n  rootPath: state.rootPath\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSongs: (str) => dispatch(fetchSongs(str))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport SearchingPage from \"../redux/containers/SearchingPage\";\r\nimport Favorites from \"../redux/containers/Favorites\";\r\nimport Player from \"../redux/containers/Player\";\r\nimport Menu from \"../redux/containers/Menu\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Controller extends Component {\r\n  componentDidMount(){\r\n    const ids = localStorage.getItem(\"iTunesApp\");\r\n    if(typeof ids === \"string\" && ids)\r\n      ids.split(\" \").forEach(id => this.props.getSongs(null, id));\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let {trackLink, isPlaying, playlist, next} = this.props.playerInfo;\r\n\r\n    if(trackLink !== prevProps.playerInfo.trackLink) {\r\n      this.audio = new Audio(trackLink);\r\n      this.audio.onended = () => {this.props.addSongToPlayer(playlist[next], playlist)};\r\n      this.audio.onloadeddata = () => this.audio.play()\r\n    } else if(this.audio !== undefined){\r\n      isPlaying ? this.playSong() : this.pause();\r\n    }\r\n  };\r\n\r\n  getSnapshotBeforeUpdate(prevProps) {\r\n    let {trackLink} = this.props.playerInfo;\r\n    if(prevProps.playerInfo.trackLink && trackLink !== prevProps.playerInfo.trackLink)\r\n      this.audio.src = \"\";\r\n\r\n    return null\r\n  };\r\n\r\n  playSong = () => this.audio.play();\r\n  pause = () => this.audio.pause();\r\n\r\n  render(){\r\n    const {rootPath} = this.props;\r\n    return (\r\n      <Router>\r\n        <Route path={rootPath} component={Menu} /><br/>\r\n        <Route exact path={rootPath} component={SearchingPage} />\r\n        <Route exact path={rootPath+\"favorites\"} component={Favorites} /><br/><br/><br/>\r\n        <Route path={rootPath} component={Player} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nController.propTypes = {\r\n  addSongToPlayer: PropTypes.func,\r\n  playerInfo: PropTypes.object,\r\n  getSongs: PropTypes.func,\r\n  audio: PropTypes.object\r\n};\r\n\r\nexport default Controller\r\n","import { connect } from \"react-redux\";\r\nimport Controller from \"../../components/Controller\";\r\nimport fetchSongs from \"../actionCreators/fetchSongs\";\r\nimport { addSongSuccess } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n  playerInfo: state.playerInfo,\r\n  rootPath: state.rootPath\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getSongs: (str, id) => dispatch(fetchSongs(str, id)),\r\n  addSongToPlayer: (song, playlist) => dispatch(addSongSuccess(song, playlist))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Controller);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./redux/reducer\";\r\nimport { themes } from \"./themes\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport \"./index.css\"\r\n\r\nimport Controller from \"./redux/containers/Controller\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={themes.main}>\r\n    <Controller />\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}